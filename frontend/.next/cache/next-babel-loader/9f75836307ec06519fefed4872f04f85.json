{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\apps\\\\shield\\\\frontend\\\\pages\\\\login.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query GET_USER {\\n    id\\n    firstName\\n    roles\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation LOGIN($email: String!, $password: String!) {\\n    LOGIN(email: $email, password: $password) {\\n      id\\n      firstName\\n      roles\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport composeRedirectString from '../lib/composeRedirectString';\nvar LOGIN = gql(_templateObject());\nvar GET_USER = gql(_templateObject2());\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      password: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (_ref) {\n      var _ref$target = _ref.target,\n          name = _ref$target.name,\n          value = _ref$target.value;\n\n      _this.setState(_defineProperty({}, \"\".concat(name), value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      return React.createElement(Mutation, {\n        mutation: LOGIN,\n        update: function update(cache, _ref2) {\n          var login = _ref2.data.LOGIN;\n          console.log(login);\n          cache.writeQuery({\n            query: GET_USER,\n            data: login\n          });\n          var redirect = _this2.props.redirect;\n          Router.push(redirect);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, function (login) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: function onSubmit(e) {\n            e.preventDefault();\n            login({\n              variables: {\n                email: email,\n                password: password\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          onChange: _this2.handleChange,\n          value: email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: _this2.handleChange,\n          value: password,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Login\")));\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx) {\n        var asPath, redirect;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                asPath = ctx.asPath;\n                redirect = composeRedirectString(asPath);\n                return _context.abrupt(\"return\", {\n                  redirect: redirect\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["C:\\apps\\shield\\frontend\\pages\\login.js"],"names":["React","Component","Router","gql","Mutation","composeRedirectString","LOGIN","GET_USER","Login","email","password","target","name","value","setState","state","cache","login","data","console","log","writeQuery","query","redirect","props","push","e","preventDefault","variables","handleChange","ctx","asPath"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AAEA,IAAMC,KAAK,GAAGH,GAAH,mBAAX;AAUA,IAAMI,QAAQ,GAAGJ,GAAH,oBAAd;;IAQMK,K;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;mEAYO,gBAAiC;AAAA,6BAA9BC,MAA8B;AAAA,UAApBC,IAAoB,eAApBA,IAAoB;AAAA,UAAdC,KAAc,eAAdA,KAAc;;AAC9C,YAAKC,QAAL,+BACMF,IADN,GACeC,KADf;AAGD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACgC,IADhC,CACCE,KADD;AAAA,UACUN,KADV,eACUA,KADV;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAGP,aACE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEJ,KADZ;AAEE,QAAA,MAAM,EAAE,gBAACU,KAAD,SAAuC;AAAA,cAAdC,KAAc,SAA7BC,IAA6B,CAArBZ,KAAqB;AAC7Ca,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAD,UAAAA,KAAK,CAACK,UAAN,CAAiB;AACfC,YAAAA,KAAK,EAAEf,QADQ;AAEfW,YAAAA,IAAI,EAAED;AAFS,WAAjB;AAF6C,cAOrCM,QAPqC,GAOxB,MAAI,CAACC,KAPmB,CAOrCD,QAPqC;AAQ7CrB,UAAAA,MAAM,CAACuB,IAAP,CAAYF,QAAZ;AACD,SAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaG,UAAAN,KAAK;AAAA,eACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,QAAQ,EAAE,kBAACS,CAAD,EAAO;AACfA,YAAAA,CAAC,CAACC,cAAF;AAEAV,YAAAA,KAAK,CAAC;AAAEW,cAAAA,SAAS,EAAE;AAAEnB,gBAAAA,KAAK,EAALA,KAAF;AAASC,gBAAAA,QAAQ,EAARA;AAAT;AAAb,aAAD,CAAL;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,QAAQ,EAAE,MAAI,CAACmB,YAA/C;AAA6D,UAAA,KAAK,EAAEpB,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,EAQE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,QAAQ,EAAE,MAAI,CAACoB,YAAtD;AAAoE,UAAA,KAAK,EAAEnB,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,EASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,CADF,CADI;AAAA,OAbR,CADF;AA+BD;;;;;;gDA/C4BoB,G;;;;;;AACnBC,gBAAAA,M,GAAWD,G,CAAXC,M;AACFR,gBAAAA,Q,GAAWlB,qBAAqB,CAAC0B,MAAD,C;iDAE/B;AAAER,kBAAAA,QAAQ,EAARA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAVStB,S;;AAwDpB,eAAeO,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Router from 'next/router';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo';\r\nimport composeRedirectString from '../lib/composeRedirectString';\r\n\r\nconst LOGIN = gql`\r\n  mutation LOGIN($email: String!, $password: String!) {\r\n    LOGIN(email: $email, password: $password) {\r\n      id\r\n      firstName\r\n      roles\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_USER = gql`\r\n  query GET_USER {\r\n    id\r\n    firstName\r\n    roles\r\n  }\r\n`;\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  static async getInitialProps(ctx) {\r\n    const { asPath } = ctx;\r\n    const redirect = composeRedirectString(asPath);\r\n\r\n    return { redirect };\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [`${name}`]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { state: { email, password } } = this;\r\n\r\n    return (\r\n      <Mutation\r\n        mutation={LOGIN}\r\n        update={(cache, { data: { LOGIN: login } }) => {\r\n          console.log(login);\r\n          cache.writeQuery({\r\n            query: GET_USER,\r\n            data: login,\r\n          });\r\n\r\n          const { redirect } = this.props;\r\n          Router.push(redirect);\r\n        }}\r\n      >\r\n        {login => (\r\n          <div>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n\r\n                login({ variables: { email, password } });\r\n              }}\r\n            >\r\n              <input type=\"text\" name=\"email\" onChange={this.handleChange} value={email} />\r\n              <input type=\"password\" name=\"password\" onChange={this.handleChange} value={password} />\r\n              <button type=\"submit\">Login</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}