{"version":3,"file":"static/webpack/static\\development\\pages\\about.js.7f8441f666a744986473.hot-update.js","sources":["webpack:///./lib/withAuth.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport cookies from 'next-cookies';\r\nimport Router from 'next/router';\r\nimport composeQueryString from './composeQueryString';\r\n\r\n// Gets the display name of a JSX component for dev tools\r\nconst getDisplayName = WrappedComponent => WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n\r\nconst _withAuth = WrappedComponent => class withAuth extends Component {\r\n  static displayname = `withAuth(${getDisplayName(WrappedComponent)})`;\r\n\r\n  static async getInitialProps(ctx) {\r\n    const { token } = cookies(ctx);\r\n    const { asPath } = ctx;\r\n\r\n    // Server side only\r\n    if (ctx.req && !token) {\r\n      // redirect to login page if no token present\r\n      ctx.res.writeHead(302, { Location: '/login' });\r\n      ctx.res.end();\r\n    }\r\n\r\n    const componentProps = WrappedComponent.getInitialProps && await WrappedComponent.getInitialProps(ctx);\r\n\r\n    return { ...componentProps };\r\n  }\r\n\r\n  handleError = (error) => {\r\n    // redirect if UNAUTHENTICATED\r\n    if (error.message === 'GraphQL error: You must be logged in to view this content') {\r\n      if (typeof window !== 'undefined') {\r\n        const { asPath } = Router;\r\n        console.log(asPath);\r\n        Router.push('/login');\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <WrappedComponent {...this.props} onError={this.handleError} />;\r\n  }\r\n};\r\n\r\nexport default _withAuth;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAoBA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;AACA;AADA;AAAA;AAAA;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAbA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAcA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAkCA;;;;A","sourceRoot":""}