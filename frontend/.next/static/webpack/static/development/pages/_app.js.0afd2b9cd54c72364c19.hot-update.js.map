{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.0afd2b9cd54c72364c19.hot-update.js","sources":["webpack:///./lib/with-apollo-client.js"],"sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport { getDataFromTree } from 'react-apollo';\r\nimport initApollo from './init-apollo';\r\n\r\nexport default App => class Apollo extends React.Component {\r\n  static displayName = 'withApollo(App)';\r\n    \r\n  constructor(props) {\r\n    // called after getInitalProps\r\n    super(props);\r\n    this.apolloClient = initApollo(props.apolloState);\r\n  }\r\n\r\n  static async getInitialProps(ctx) {\r\n    const { Component, router } = ctx;\r\n\r\n    // Get initial props for _app.js\r\n    let appProps = {};\r\n    if (App.getInitialProps) {\r\n      appProps = await App.getInitialProps(ctx);\r\n    }\r\n\r\n    // Run all GraphQL queries in the component tree\r\n    // and extract data to populate apollo cache\r\n    const apollo = initApollo();\r\n    if (typeof window === 'undefined') {\r\n      try {\r\n        // Run all GraphQL queries\r\n        await getDataFromTree(\r\n          <App\r\n            {...appProps}\r\n            Component={Component}\r\n            router={router}\r\n            apolloClient={apollo}\r\n          />,\r\n        );\r\n      } catch (error) {\r\n        // Prevent Apollo Client GraphQL errors from crashing SSR.\r\n        // Handle them in components via the data.error prop or in onError link\r\n        console.error('Error while running `getDataFromTree`', error);\r\n      }\r\n\r\n      // getDataFromTree does not call componentWillUnmount\r\n      // head side effect therefore need to be cleared manually\r\n      Head.rewind();\r\n    }\r\n\r\n    // Extract query data from the Apollo store\r\n    const apolloState = apollo.cache.extract();\r\n\r\n    return {\r\n      ...appProps,\r\n      apolloState,\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    return <App {...this.props} apollo={this.apolloClient} />;\r\n  }\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AARA;AAAA;AAAA;AAqDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAEA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAeA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA2BA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1BA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAiCA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AACA;AAzCA;AA2CA;AACA;AA5CA;AAgDA;AAhDA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;;;;A","sourceRoot":""}